@page "/"
@using Delgado.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager

<style>    
    .main-container {

        background: linear-gradient(to bottom, #1C1C1C 0%, #29221E 100%);
        overflow: hidden;
        padding-bottom: 2rem; 
        display: flex;
        flex-direction: column;
        color: #fff;        
        height: 100vh;
    }

    .name-container {
        height: 100%;
        min-width: 25rem;
        display: flex;
        flex-direction: column;
        justify-content: start;
        align-items: center;
        gap: 0.6rem;
        overflow-y: auto;        
    }

 

    .cv-container {
        max-width: 800px;
        display: flex;
        width: 90%; 
        gap: 2rem;
        flex-direction: column;
        margin-top: 1rem;
        margin: auto; 
        margin-top: 1rem;
    }

    section, .article-container {
        font-size: 1rem;
        line-height: 2;
        font-family: 'Roboto', sans-serif;
        background: rgba(255, 255, 255, 0.04);
        padding: 1rem;
        border-radius: 8px;
        text-align: justify;
    }

    table, td {
        width: 100%;
        padding: 0.5rem;
    }
    
    .floating-buttons {
        position: fixed;
        bottom: 20px;
        right: 20px;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .floating-btn {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        border: none;
        color: #fff;       
        cursor: pointer;
        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
    }

    .floating-btn:hover {
        background-color: #0056b3;
    }   

    .floating-btn {
        width: 50px; 
        height: 50px;
    }

    .floating-buttons {
        flex-direction: row; 
    }
    
    .name-container::-webkit-scrollbar {
        width: 8px; 
    }

    .name-container::-webkit-scrollbar-track {
        background: inherit; 
    }

    .name-container::-webkit-scrollbar-thumb {
        background-color: #A0522D; 
        border-radius: 6px; 
    }

    .ContactInfo {
        margin-top: auto; 
        padding: 1rem;
        text-align: center;

    }


</style>


<div class="main-container">
    @if (isLoading)
    {
        <div class="loading-screen">
            <div class="title-container">
                <h1 style="letter-spacing: 1.48rem; margin-right: -1.48rem;">SILVIO</h1>
                <h1 style="letter-spacing: 1rem; margin-right: -1rem;">DELGADO</h1>
            </div>
            <div class="loading-title">Loading</div>
            <div>
                <span class="loading-dot"></span>
                <span class="loading-dot"></span>
                <span class="loading-dot"></span>
            </div>
        </div>
    }
    else
    {
    <div class="name-container">
       
        <!-- Name and Title -->
        <div class="title-container">
            <h1 style="letter-spacing: 1.48rem; margin-right: -1.48rem;">SILVIO</h1>
            <h1 style="letter-spacing: 1rem; margin-right: -1rem;">DELGADO</h1>
        </div>
        <div style="text-align: center;">
            <p style="font-weight: bold; font-family: 'DM Sans', sans-serif; letter-spacing: .1rem">.NET CLOUD DEVELOPER STUDENT</p>
        </div>

        <!-- CV Content -->
        <div class="cv-container">
            <!-- Introduction -->
            <section class="article-container">
                <h6><b>INTRODUCTION</b></h6>
                <p>@cv.Summary</p>
            </section>

            <!-- Education -->
            <section>
                <h6><b>EDUCATION</b></h6>
                @foreach (var degree in cv.Degrees!)
                {
                    <div style="margin-top:1rem">
                        <b>@degree.Title, @degree.School, @degree.Location, @degree.StartDate - @degree.EndDate</b>
                        <p>@degree.Description</p>
                    </div>
                }
            </section>

            <!-- Experience -->
            <section>
                <h6><b>EXPERIENCE</b></h6>
                @foreach (var experience in cv.Experiences!)
                {
                    <div style="margin-top:1rem">
                        <b>@experience.Title, @experience.Company, @experience.Location, @experience.StartDate - @experience.EndDate</b>
                        <p>@experience.Description</p>
                    </div>
                }
            </section>

            <!-- Skills -->
            <section>
                <h6><b>SKILLS</b></h6>
                <ul>
                    @foreach (var skill in cv.Skills!)
                    {
                        @if (!string.IsNullOrEmpty(skill))
                        {
                            <li>@skill</li>
                        }
                    }
                </ul>
            </section>

            <!-- Projects -->
            <section>
                <h6><b>PROJECTS</b></h6>
                @foreach (var project in cv.Projects!)
                {
                    <div style="margin-top:1rem">
                        <b>@project.Name</b>
                        <p>@project.Description</p>
                        <p>Technologies: @string.Join(", ", project.Technologies)</p>                        
                    </div>
                }
            </section>
                <div class="ContactInfo">
                    <p>@cv.Name</p>
                    <p>Phone: @cv.PhoneNumber</p>
                    <p>Email: @cv.Email</p>
                    
                </div>
        </div>
    </div>
       
    <!-- Buttons -->
    <div class="floating-buttons">
        <button class="floating-btn" style=" background-color: #0077B5;" onclick="window.open('@cv.LinkedIn', '_blank')">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-linkedin" viewBox="0 0 16 16">
                <path d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854zm4.943 12.248V6.169H2.542v7.225zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248S2.4 3.226 2.4 3.934c0 .694.521 1.248 1.327 1.248zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016l.016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225z" />
            </svg>
        </button>
        <button class="floating-btn" style=" background-color: #24292E;" onclick="window.open('@cv.GitHub', '_blank')">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-github" viewBox="0 0 16 16">
                <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27s1.36.09 2 .27c1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.01 8.01 0 0 0 16 8c0-4.42-3.58-8-8-8" />
            </svg>
        </button>
        <button class="floating-btn" style=" background-color: #24292E;" @onclick="NavigateToAdmin">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sliders" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M11.5 2a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3M9.05 3a2.5 2.5 0 0 1 4.9 0H16v1h-2.05a2.5 2.5 0 0 1-4.9 0H0V3zM4.5 7a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3M2.05 8a2.5 2.5 0 0 1 4.9 0H16v1H6.95a2.5 2.5 0 0 1-4.9 0H0V8zm9.45 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m-2.45 1a2.5 2.5 0 0 1 4.9 0H16v1h-2.05a2.5 2.5 0 0 1-4.9 0H0v-1z" />
            </svg>
        </button>
            
    </div>

  
}
</div>
@code {

    private CV cv = new CV();    
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        List<CV>? cvs = await Http.GetFromJsonAsync<List<CV>>("api/cv");

        try
        {
            cv = cvs?.FirstOrDefault() ?? new CV();
        }
        catch (Exception)
        {
            cv = new CV();
        }
        finally
        {
            isLoading = false; // Set loading to false after data is loaded
        }
    }

    private void NavigateToAdmin()
    {
        NavigationManager.NavigateTo("/admin");
    }

}
